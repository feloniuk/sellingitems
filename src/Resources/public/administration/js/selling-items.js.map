{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items/page/selling-items-create/index.js","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items/page/selling-items-list/selling-items-list.html.twig","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items/page/selling-items-list/index.js","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items/page/selling-items-detail/selling-items-detail.html.twig","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items/page/selling-items-detail/index.js","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items/index.js","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items-category/page/selling-items-category-list/selling-items-category-list.html.twig","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items-category/page/selling-items-category-list/index.js","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items-category/page/selling-items-category-detail/selling-items-category-detail.html.twig","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items-category/page/selling-items-category-detail/index.js","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items-category/index.js","webpack:////var/www/store/shopware/custom/plugins/SellingItems/src/Resources/app/administration/src/module/selling-items-category/page/selling-items-category-create/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Shopware","Component","extend","methods","getItem","this","item","repository","Context","api","active","mainImageId","previewImageId","price","onClickSave","_this","isLoading","title","categoryId","createNotificationError","$tc","message","save","then","$router","push","params","id","createNotificationSuccess","catch","exception","_Shopware","Mixin","Criteria","Data","register","template","inject","mixins","getByName","data","items","sortBy","sortDirection","metaInfo","$createTitle","computed","repositoryFactory","columns","dataIndex","label","routerLink","primary","getList","criteria","page","limit","setTerm","term","addSorting","sort","addAssociation","search","result","total","updateTotal","_ref","processSuccess","categoryRepository","categoryCriteria","addFilter","equals","created","$route","entity","_this2","saveFinish","Module","type","description","color","icon","routes","list","component","path","detail","meta","parentPath","navigation","position","parent"],"mappings":"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","file":"static/js/selling-items.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/sellingitems/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"oqc2\");\n","const { Component } = Shopware;\r\n\r\nComponent.extend('selling-items-create', 'selling-items-detail', {\r\n    methods: {\r\n        getItem() {\r\n            this.item = this.repository.create(Shopware.Context.api);\r\n            this.item.active = true;\r\n            // Initialize with null values for images\r\n            this.item.mainImageId = null;\r\n            this.item.previewImageId = null;\r\n            this.item.price = 0;\r\n        },\r\n\r\n        onClickSave() {\r\n            this.isLoading = true;\r\n\r\n            // Validate required fields\r\n            if (!this.item.title || !this.item.categoryId) {\r\n                this.isLoading = false;\r\n                this.createNotificationError({\r\n                    title: this.$tc('selling-items.detail.errorTitle'),\r\n                    message: 'Please fill in all required fields'\r\n                });\r\n                return;\r\n            }\r\n\r\n            this.repository\r\n                .save(this.item, Shopware.Context.api)\r\n                .then(() => {\r\n                    this.isLoading = false;\r\n                    this.$router.push({ name: 'selling.items.detail', params: { id: this.item.id } });\r\n                    this.createNotificationSuccess({\r\n                        title: this.$tc('selling-items.detail.successTitle'),\r\n                        message: this.$tc('selling-items.detail.successMessage')\r\n                    });\r\n                }).catch((exception) => {\r\n                    this.isLoading = false;\r\n                    this.createNotificationError({\r\n                        title: this.$tc('selling-items.detail.errorTitle'),\r\n                        message: exception\r\n                    });\r\n                });\r\n        }\r\n    }\r\n});","export default \"{% block selling_items_list %}\\r\\n    <sw-page class=\\\"selling-items-list\\\">\\r\\n        {% block selling_items_list_smart_bar_header %}\\r\\n            <template #smart-bar-header>\\r\\n                {% block selling_items_list_smart_bar_header_title %}\\r\\n                    <h2>{{ $tc('selling-items.list.textTitle') }}</h2>\\r\\n                {% endblock %}\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block selling_items_list_smart_bar_actions %}\\r\\n            <template #smart-bar-actions>\\r\\n                {% block selling_items_list_smart_bar_actions_add %}\\r\\n                    <sw-button\\r\\n                        :routerLink=\\\"{ name: 'selling.items.create' }\\\"\\r\\n                        variant=\\\"primary\\\">\\r\\n                        {{ $tc('selling-items.list.buttonAddItem') }}\\r\\n                    </sw-button>\\r\\n                {% endblock %}\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block selling_items_list_content %}\\r\\n            <template #content>\\r\\n                {% block selling_items_list_content_list %}\\r\\n                    <sw-entity-listing\\r\\n                        v-if=\\\"items\\\"\\r\\n                        :items=\\\"items\\\"\\r\\n                        :repository=\\\"repository\\\"\\r\\n                        :showSelection=\\\"false\\\"\\r\\n                        :columns=\\\"columns\\\"\\r\\n                        detailRoute=\\\"selling.items.detail\\\"\\r\\n                        :isLoading=\\\"isLoading\\\"\\r\\n                        @update-records=\\\"updateTotal\\\">\\r\\n                    </sw-entity-listing>\\r\\n                {% endblock %}\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n    </sw-page>\\r\\n{% endblock %}\";","import template from './selling-items-list.html.twig';\r\n\r\nconst { Component, Mixin } = Shopware;\r\nconst { Criteria } = Shopware.Data;\r\n\r\nComponent.register('selling-items-list', {\r\n    template,\r\n\r\n    inject: [\r\n        'repositoryFactory'\r\n    ],\r\n\r\n    mixins: [\r\n        Mixin.getByName('listing')\r\n    ],\r\n\r\n    data() {\r\n        return {\r\n            items: null,\r\n            isLoading: true,\r\n            sortBy: 'createdAt',\r\n            sortDirection: 'DESC'\r\n        };\r\n    },\r\n\r\n    metaInfo() {\r\n        return {\r\n            title: this.$createTitle()\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        repository() {\r\n            return this.repositoryFactory.create('selling_item');\r\n        },\r\n\r\n        columns() {\r\n            return [{\r\n                property: 'title',\r\n                dataIndex: 'title',\r\n                label: 'selling-items.list.columnTitle',\r\n                routerLink: 'selling.items.detail',\r\n                primary: true\r\n            }, {\r\n                property: 'subtitle',\r\n                dataIndex: 'subtitle',\r\n                label: 'selling-items.list.columnSubtitle'\r\n            }, {\r\n                property: 'price',\r\n                dataIndex: 'price',\r\n                label: 'selling-items.list.columnPrice'\r\n            }, {\r\n                property: 'category.name',\r\n                dataIndex: 'category.name',\r\n                label: 'selling-items.list.columnCategory'\r\n            }, {\r\n                property: 'active',\r\n                dataIndex: 'active',\r\n                label: 'selling-items.list.columnActive'\r\n            }];\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        getList() {\r\n            const criteria = new Criteria(this.page, this.limit);\r\n            criteria.setTerm(this.term);\r\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\r\n            criteria.addAssociation('category');\r\n            criteria.addAssociation('mainImage');\r\n            criteria.addAssociation('previewImage');\r\n\r\n            this.isLoading = true;\r\n\r\n            this.repository\r\n                .search(criteria)\r\n                .then((result) => {\r\n                    this.items = result;\r\n                    this.total = result.total;\r\n                    this.isLoading = false;\r\n                });\r\n        },\r\n\r\n        updateTotal({ total }) {\r\n            this.total = total;\r\n        }\r\n    }\r\n});","export default \"{% block selling_items_detail %}\\r\\n    <sw-page class=\\\"selling-items-detail\\\">\\r\\n        <template #smart-bar-header>\\r\\n            <h2>{{ item ? item.title : '' }}</h2>\\r\\n        </template>\\r\\n\\r\\n        <template #smart-bar-actions>\\r\\n            <sw-button-process\\r\\n                :isLoading=\\\"isLoading\\\"\\r\\n                :processSuccess=\\\"processSuccess\\\"\\r\\n                variant=\\\"primary\\\"\\r\\n                @process-finish=\\\"saveFinish\\\"\\r\\n                @click=\\\"onClickSave\\\">\\r\\n                {{ $tc('selling-items.detail.buttonSave') }}\\r\\n            </sw-button-process>\\r\\n        </template>\\r\\n\\r\\n        <template #content>\\r\\n            <sw-card-view>\\r\\n                <sw-card v-if=\\\"item\\\" :isLoading=\\\"isLoading\\\">\\r\\n                    <sw-field \\r\\n                        v-model=\\\"item.title\\\"\\r\\n                        :label=\\\"$tc('selling-items.detail.titleLabel')\\\"\\r\\n                        required>\\r\\n                    </sw-field>\\r\\n\\r\\n                    <sw-field \\r\\n                        v-model=\\\"item.subtitle\\\"\\r\\n                        :label=\\\"$tc('selling-items.detail.subtitleLabel')\\\">\\r\\n                    </sw-field>\\r\\n\\r\\n                    <sw-field \\r\\n                        v-model=\\\"item.link\\\"\\r\\n                        :label=\\\"$tc('selling-items.detail.linkLabel')\\\">\\r\\n                    </sw-field>\\r\\n\\r\\n                    <sw-number-field\\r\\n                        v-model=\\\"item.price\\\"\\r\\n                        :label=\\\"$tc('selling-items.detail.priceLabel')\\\"\\r\\n                        :min=\\\"0\\\"\\r\\n                        :step=\\\"0.01\\\"\\r\\n                        numberType=\\\"float\\\">\\r\\n                    </sw-number-field>\\r\\n\\r\\n                    <sw-entity-single-select\\r\\n                        v-model=\\\"item.categoryId\\\"\\r\\n                        entity=\\\"selling_item_category\\\"\\r\\n                        :label=\\\"$tc('selling-items.detail.categoryLabel')\\\"\\r\\n                        :criteria=\\\"categoryCriteria\\\"\\r\\n                        required>\\r\\n                    </sw-entity-single-select>\\r\\n\\r\\n                    \\r\\n                    <sw-media-field\\r\\n                        v-model=\\\"item.mainImageId\\\"\\r\\n                        :label=\\\"$tc('selling-items.detail.mainImageLabel')\\\"\\r\\n                        :allowMultiSelect=\\\"false\\\">\\r\\n                    </sw-media-field>\\r\\n\\r\\n                    \\r\\n                    <sw-media-field\\r\\n                        v-model=\\\"item.previewImageId\\\"\\r\\n                        :label=\\\"$tc('selling-items.detail.previewImageLabel')\\\"\\r\\n                        :allowMultiSelect=\\\"false\\\">\\r\\n                    </sw-media-field>\\r\\n\\r\\n                    <sw-switch-field\\r\\n                        v-model=\\\"item.active\\\"\\r\\n                        :label=\\\"$tc('selling-items.detail.activeLabel')\\\">\\r\\n                    </sw-switch-field>\\r\\n                </sw-card>\\r\\n            </sw-card-view>\\r\\n        </template>\\r\\n    </sw-page>\\r\\n{% endblock %}\";","import template from './selling-items-detail.html.twig';\r\n\r\nconst { Component, Mixin } = Shopware;\r\nconst { Criteria } = Shopware.Data;\r\n\r\nComponent.register('selling-items-detail', {\r\n    template,\r\n\r\n    inject: [\r\n        'repositoryFactory'\r\n    ],\r\n\r\n    mixins: [\r\n        Mixin.getByName('notification')\r\n    ],\r\n\r\n    metaInfo() {\r\n        return {\r\n            title: this.$createTitle()\r\n        };\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            item: null,\r\n            isLoading: false,\r\n            processSuccess: false,\r\n            repository: null\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        categoryRepository() {\r\n            return this.repositoryFactory.create('selling_item_category');\r\n        },\r\n\r\n        categoryCriteria() {\r\n            const criteria = new Criteria();\r\n            criteria.addFilter(Criteria.equals('active', true));\r\n            return criteria;\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.repository = this.repositoryFactory.create('selling_item');\r\n        this.getItem();\r\n    },\r\n\r\n    methods: {\r\n        getItem() {\r\n            if (!this.$route.params.id) {\r\n                return;\r\n            }\r\n\r\n            const criteria = new Criteria();\r\n            criteria.addAssociation('category');\r\n            criteria.addAssociation('mainImage');\r\n            criteria.addAssociation('previewImage');\r\n\r\n            this.repository\r\n                .get(this.$route.params.id, Shopware.Context.api, criteria)\r\n                .then((entity) => {\r\n                    this.item = entity;\r\n                });\r\n        },\r\n\r\n        onClickSave() {\r\n            this.isLoading = true;\r\n\r\n            // Validate required fields\r\n            if (!this.item.title || !this.item.categoryId) {\r\n                this.isLoading = false;\r\n                this.createNotificationError({\r\n                    title: this.$tc('selling-items.detail.errorTitle'),\r\n                    message: 'Please fill in all required fields'\r\n                });\r\n                return;\r\n            }\r\n\r\n            this.repository\r\n                .save(this.item, Shopware.Context.api)\r\n                .then(() => {\r\n                    this.getItem();\r\n                    this.isLoading = false;\r\n                    this.processSuccess = true;\r\n                    this.createNotificationSuccess({\r\n                        title: this.$tc('selling-items.detail.successTitle'),\r\n                        message: this.$tc('selling-items.detail.successMessage')\r\n                    });\r\n                }).catch((exception) => {\r\n                    this.isLoading = false;\r\n                    this.createNotificationError({\r\n                        title: this.$tc('selling-items.detail.errorTitle'),\r\n                        message: exception\r\n                    });\r\n                });\r\n        },\r\n\r\n        saveFinish() {\r\n            this.processSuccess = false;\r\n        }\r\n    }\r\n});","import './page/selling-items-list';\r\nimport './page/selling-items-detail';\r\nimport './page/selling-items-create';\r\n\r\nconst { Module } = Shopware;\r\n\r\nModule.register('selling-items', {\r\n    type: 'plugin',\r\n    name: 'selling-items',\r\n    title: 'selling-items.general.mainMenuItemGeneral',\r\n    description: 'selling-items.general.descriptionTextModule',\r\n    color: '#ff3d58',\r\n    icon: 'default-shopping-paper-bag-product',\r\n\r\n    routes: {\r\n        list: {\r\n            component: 'selling-items-list',\r\n            path: 'list'\r\n        },\r\n        detail: {\r\n            component: 'selling-items-detail',\r\n            path: 'detail/:id',\r\n            meta: {\r\n                parentPath: 'selling.items.list'\r\n            }\r\n        },\r\n        create: {\r\n            component: 'selling-items-create',\r\n            path: 'create',\r\n            meta: {\r\n                parentPath: 'selling.items.list'\r\n            }\r\n        }\r\n    },\r\n\r\n    navigation: [{\r\n        label: 'selling-items.general.mainMenuItemGeneral',\r\n        color: '#ff3d58',\r\n        path: 'selling.items.list',\r\n        icon: 'default-shopping-paper-bag-product',\r\n        position: 100,\r\n        parent: 'sw-catalogue'\r\n    }]\r\n});","export default \"{% block selling_items_category_list %}\\r\\n    <sw-page class=\\\"selling-items-category-list\\\">\\r\\n        {% block selling_items_category_list_smart_bar_header %}\\r\\n            <template #smart-bar-header>\\r\\n                {% block selling_items_category_list_smart_bar_header_title %}\\r\\n                    <h2>{{ $tc('selling-items-category.list.textTitle') }}</h2>\\r\\n                {% endblock %}\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block selling_items_category_list_smart_bar_actions %}\\r\\n            <template #smart-bar-actions>\\r\\n                {% block selling_items_category_list_smart_bar_actions_add %}\\r\\n                    <sw-button\\r\\n                        :routerLink=\\\"{ name: 'selling.items.category.create' }\\\"\\r\\n                        variant=\\\"primary\\\">\\r\\n                        {{ $tc('selling-items-category.list.buttonAddCategory') }}\\r\\n                    </sw-button>\\r\\n                {% endblock %}\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n\\r\\n        {% block selling_items_category_list_content %}\\r\\n            <template #content>\\r\\n                {% block selling_items_category_list_content_list %}\\r\\n                    <sw-entity-listing\\r\\n                        v-if=\\\"items\\\"\\r\\n                        :items=\\\"items\\\"\\r\\n                        :repository=\\\"repository\\\"\\r\\n                        :showSelection=\\\"false\\\"\\r\\n                        :columns=\\\"columns\\\"\\r\\n                        detailRoute=\\\"selling.items.category.detail\\\"\\r\\n                        :isLoading=\\\"isLoading\\\"\\r\\n                        @update-records=\\\"updateTotal\\\">\\r\\n                    </sw-entity-listing>\\r\\n                {% endblock %}\\r\\n            </template>\\r\\n        {% endblock %}\\r\\n    </sw-page>\\r\\n{% endblock %}\";","import template from './selling-items-category-list.html.twig';\r\n\r\nconst { Component, Mixin } = Shopware;\r\nconst { Criteria } = Shopware.Data;\r\n\r\nComponent.register('selling-items-category-list', {\r\n    template,\r\n\r\n    inject: [\r\n        'repositoryFactory'\r\n    ],\r\n\r\n    mixins: [\r\n        Mixin.getByName('listing')\r\n    ],\r\n\r\n    data() {\r\n        return {\r\n            items: null,\r\n            isLoading: true,\r\n            sortBy: 'createdAt',\r\n            sortDirection: 'DESC'\r\n        };\r\n    },\r\n\r\n    metaInfo() {\r\n        return {\r\n            title: this.$createTitle()\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        repository() {\r\n            return this.repositoryFactory.create('selling_item_category');\r\n        },\r\n\r\n        columns() {\r\n            return [{\r\n                property: 'name',\r\n                dataIndex: 'name',\r\n                label: 'selling-items-category.list.columnName',\r\n                routerLink: 'selling.items.category.detail',\r\n                primary: true\r\n            }, {\r\n                property: 'active',\r\n                dataIndex: 'active',\r\n                label: 'selling-items-category.list.columnActive'\r\n            }];\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        getList() {\r\n            const criteria = new Criteria(this.page, this.limit);\r\n            criteria.setTerm(this.term);\r\n            criteria.addSorting(Criteria.sort(this.sortBy, this.sortDirection));\r\n\r\n            this.isLoading = true;\r\n\r\n            this.repository\r\n                .search(criteria)\r\n                .then((result) => {\r\n                    this.items = result;\r\n                    this.total = result.total;\r\n                    this.isLoading = false;\r\n                });\r\n        },\r\n\r\n        updateTotal({ total }) {\r\n            this.total = total;\r\n        }\r\n    }\r\n});","export default \"{% block selling_items_category_detail %}\\r\\n    <sw-page class=\\\"selling-items-category-detail\\\">\\r\\n        <template #smart-bar-header>\\r\\n            <h2>{{ item ? item.name : '' }}</h2>\\r\\n        </template>\\r\\n\\r\\n        <template #smart-bar-actions>\\r\\n            <sw-button-process\\r\\n                :isLoading=\\\"isLoading\\\"\\r\\n                :processSuccess=\\\"processSuccess\\\"\\r\\n                variant=\\\"primary\\\"\\r\\n                @process-finish=\\\"saveFinish\\\"\\r\\n                @click=\\\"onClickSave\\\">\\r\\n                {{ $tc('selling-items-category.detail.buttonSave') }}\\r\\n            </sw-button-process>\\r\\n        </template>\\r\\n\\r\\n        <template #content>\\r\\n            <sw-card-view>\\r\\n                <sw-card v-if=\\\"item\\\" :isLoading=\\\"isLoading\\\">\\r\\n                    <sw-field \\r\\n                        v-model=\\\"item.name\\\"\\r\\n                        :label=\\\"$tc('selling-items-category.detail.nameLabel')\\\"\\r\\n                        required>\\r\\n                    </sw-field>\\r\\n\\r\\n                    <sw-switch-field\\r\\n                        v-model=\\\"item.active\\\"\\r\\n                        :label=\\\"$tc('selling-items-category.detail.activeLabel')\\\">\\r\\n                    </sw-switch-field>\\r\\n                </sw-card>\\r\\n            </sw-card-view>\\r\\n        </template>\\r\\n    </sw-page>\\r\\n{% endblock %}\";","import template from './selling-items-category-detail.html.twig';\r\n\r\nconst { Component, Mixin } = Shopware;\r\n\r\nComponent.register('selling-items-category-detail', {\r\n    template,\r\n\r\n    inject: [\r\n        'repositoryFactory'\r\n    ],\r\n\r\n    mixins: [\r\n        Mixin.getByName('notification')\r\n    ],\r\n\r\n    metaInfo() {\r\n        return {\r\n            title: this.$createTitle()\r\n        };\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            item: null,\r\n            isLoading: false,\r\n            processSuccess: false,\r\n            repository: null\r\n        };\r\n    },\r\n\r\n    created() {\r\n        this.repository = this.repositoryFactory.create('selling_item_category');\r\n        this.getItem();\r\n    },\r\n\r\n    methods: {\r\n        getItem() {\r\n            if (!this.$route.params.id) {\r\n                return;\r\n            }\r\n\r\n            this.repository\r\n                .get(this.$route.params.id, Shopware.Context.api)\r\n                .then((entity) => {\r\n                    this.item = entity;\r\n                });\r\n        },\r\n\r\n        onClickSave() {\r\n            this.isLoading = true;\r\n\r\n            this.repository\r\n                .save(this.item, Shopware.Context.api)\r\n                .then(() => {\r\n                    this.getItem();\r\n                    this.isLoading = false;\r\n                    this.processSuccess = true;\r\n                }).catch((exception) => {\r\n                    this.isLoading = false;\r\n                    this.createNotificationError({\r\n                        title: this.$tc('selling-items-category.detail.errorTitle'),\r\n                        message: exception\r\n                    });\r\n                });\r\n        },\r\n\r\n        saveFinish() {\r\n            this.processSuccess = false;\r\n        }\r\n    }\r\n});","import './page/selling-items-category-list';\r\nimport './page/selling-items-category-detail';\r\nimport './page/selling-items-category-create';\r\n\r\nconst { Module } = Shopware;\r\n\r\nModule.register('selling-items-category', {\r\n    type: 'plugin',\r\n    name: 'selling-items-category',\r\n    title: 'selling-items-category.general.mainMenuItemGeneral',\r\n    description: 'selling-items-category.general.descriptionTextModule',\r\n    color: '#ff3d58',\r\n    icon: 'default-folder-full',\r\n\r\n    routes: {\r\n        list: {\r\n            component: 'selling-items-category-list',\r\n            path: 'list'\r\n        },\r\n        detail: {\r\n            component: 'selling-items-category-detail',\r\n            path: 'detail/:id',\r\n            meta: {\r\n                parentPath: 'selling.items.category.list'\r\n            }\r\n        },\r\n        create: {\r\n            component: 'selling-items-category-create',\r\n            path: 'create',\r\n            meta: {\r\n                parentPath: 'selling.items.category.list'\r\n            }\r\n        }\r\n    },\r\n\r\n    navigation: [{\r\n        label: 'selling-items-category.general.mainMenuItemGeneral',\r\n        color: '#ff3d58',\r\n        path: 'selling.items.category.list',\r\n        icon: 'default-folder-full',\r\n        position: 110,\r\n        parent: 'sw-catalogue'\r\n    }]\r\n});","const { Component } = Shopware;\r\n\r\nComponent.extend('selling-items-category-create', 'selling-items-category-detail', {\r\n    methods: {\r\n        getItem() {\r\n            this.item = this.repository.create(Shopware.Context.api);\r\n            this.item.active = true;\r\n        },\r\n\r\n        onClickSave() {\r\n            this.isLoading = true;\r\n\r\n            this.repository\r\n                .save(this.item, Shopware.Context.api)\r\n                .then(() => {\r\n                    this.isLoading = false;\r\n                    this.$router.push({ name: 'selling.items.category.detail', params: { id: this.item.id } });\r\n                    this.createNotificationSuccess({\r\n                        title: this.$tc('selling-items-category.detail.successTitle'),\r\n                        message: this.$tc('selling-items-category.detail.successMessage')\r\n                    });\r\n                }).catch((exception) => {\r\n                    this.isLoading = false;\r\n                    this.createNotificationError({\r\n                        title: this.$tc('selling-items-category.detail.errorTitle'),\r\n                        message: exception\r\n                    });\r\n                });\r\n        }\r\n    }\r\n});"],"sourceRoot":""}